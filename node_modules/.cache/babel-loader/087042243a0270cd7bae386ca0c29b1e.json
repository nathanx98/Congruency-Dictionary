{"ast":null,"code":"var _jsxFileName = \"/Users/nathanxuan/Files/Project/wxtDemo/congruency-dict/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport profileImg from './img/myself.jpg';\nimport logo from './img/logo.png';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as d3 from 'd3';\nimport data from './data.csv';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // let d = {}\n  // d3.csv(data, function(data) {\n  //   // dict[[data['make a choice']]] = data['faire un choix']\n  //   let key = \"make a choice\"\n  //   let val = 'faire un choix'\n  //   Object.assign(d, {[data[key]]: data[val]})\n  //   setDict(d)\n  // })\n  const [word, setWord] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  let dict = {\n    \"make a choice\": \"faire un choix\",\n    'make an offer': 'faire une offre',\n    'make a commitment': 'prendre un engagement',\n    'make one\\'s escape': 'prendre la fuite',\n    'make a promise': 'faire une promesse',\n    'make a step': 'faire un pas',\n    'have an experience': 'faire une expérience',\n    'make a gain': 'faire un gain',\n    'are part of': 'faire partie de',\n    'make a decision': 'prendre une décision'\n  };\n\n  const search = e => {\n    if (e.key === 'Enter') {\n      if (dict[word] === undefined) {\n        setMessage(word + \" Is Not In Our Dictionary\");\n      } else {\n        let val = dict[word];\n        val = val.trim().split(/\\s+/);\n        let key = word.trim().split(/\\s+/);\n\n        if (key[0] === 'make' && val[0] === 'faire') {\n          setMessage(word + ' is congruent');\n        } else {\n          setMessage(word + ' is not congruent');\n        }\n\n        console.log(key);\n        console.log(val);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar navbar-light\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        id: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter an English Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        placeholder: \"Press Enter to Search\",\n        value: word,\n        onChange: e => {\n          setWord(e.target.value);\n        },\n        onKeyDown: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hZT3I37cKGMvqHm+l5pb7HN8Xv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","profileImg","logo","Button","Form","d3","data","Papa","App","word","setWord","message","setMessage","dict","search","e","key","undefined","val","trim","split","console","log","target","value"],"sources":["/Users/nathanxuan/Files/Project/wxtDemo/congruency-dict/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport profileImg from './img/myself.jpg'\nimport logo from './img/logo.png'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as d3 from 'd3';\nimport data from './data.csv'\nimport Papa from 'papaparse'\n\nfunction App() {\n  // let d = {}\n  // d3.csv(data, function(data) {\n  //   // dict[[data['make a choice']]] = data['faire un choix']\n  //   let key = \"make a choice\"\n  //   let val = 'faire un choix'\n  //   Object.assign(d, {[data[key]]: data[val]})\n  //   setDict(d)\n  // })\n\n  const[word, setWord] = useState(\"\")\n  const[message, setMessage] = useState(\"\")\n  \n  let dict = {\n    \"make a choice\": \"faire un choix\",\n    'make an offer':'faire une offre',\n    'make a commitment':'prendre un engagement',\n    'make one\\'s escape':'prendre la fuite',\n    'make a promise':'faire une promesse',\n    'make a step':'faire un pas',\n    'have an experience':'faire une expérience',\n    'make a gain':'faire un gain',\n    'are part of':'faire partie de',\n    'make a decision': 'prendre une décision'\n  }\n\n  const search = (e) => {\n    if (e.key === 'Enter') {\n      if (dict[word] === undefined) {\n        setMessage(word + \" Is Not In Our Dictionary\")\n      }\n      else {\n        let val = dict[word]\n        val = val.trim().split(/\\s+/);\n        let key = word.trim().split(/\\s+/);\n        \n        if (key[0] === 'make' && val[0] === 'faire'){\n          setMessage(word + ' is congruent')\n        }\n        else {\n          setMessage(word + ' is not congruent')\n        }\n        \n        console.log(key)\n        console.log(val)\n        \n      }\n    }\n  }\n\n\n  return (\n    <div className='App'>\n      <div className=\"navbar navbar-light\">\n        <img src = {logo} id='logo'></img>\n      </div>\n\n      <div className='content'>\n        {/* <h2> Creator: 大聪明</h2>\n        <p> ⬇️</p> */}\n        {/* <img src = {profileImg} id='profile'></img> */}\n\n        <h2>Enter an English Word</h2>\n        <input \n          className=\"form-control\" \n          placeholder={\"Press Enter to Search\"}\n          value={word}\n          onChange = {(e) => {setWord(e.target.value)}}\n          onKeyDown = {search}\n        ></input>\n        <div>{message}</div>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,sCAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,MAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAA/B;EACA,MAAK,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAArC;EAEA,IAAIa,IAAI,GAAG;IACT,iBAAiB,gBADR;IAET,iBAAgB,iBAFP;IAGT,qBAAoB,uBAHX;IAIT,sBAAqB,kBAJZ;IAKT,kBAAiB,oBALR;IAMT,eAAc,cANL;IAOT,sBAAqB,sBAPZ;IAQT,eAAc,eARL;IAST,eAAc,iBATL;IAUT,mBAAmB;EAVV,CAAX;;EAaA,MAAMC,MAAM,GAAIC,CAAD,IAAO;IACpB,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;MACrB,IAAIH,IAAI,CAACJ,IAAD,CAAJ,KAAeQ,SAAnB,EAA8B;QAC5BL,UAAU,CAACH,IAAI,GAAG,2BAAR,CAAV;MACD,CAFD,MAGK;QACH,IAAIS,GAAG,GAAGL,IAAI,CAACJ,IAAD,CAAd;QACAS,GAAG,GAAGA,GAAG,CAACC,IAAJ,GAAWC,KAAX,CAAiB,KAAjB,CAAN;QACA,IAAIJ,GAAG,GAAGP,IAAI,CAACU,IAAL,GAAYC,KAAZ,CAAkB,KAAlB,CAAV;;QAEA,IAAIJ,GAAG,CAAC,CAAD,CAAH,KAAW,MAAX,IAAqBE,GAAG,CAAC,CAAD,CAAH,KAAW,OAApC,EAA4C;UAC1CN,UAAU,CAACH,IAAI,GAAG,eAAR,CAAV;QACD,CAFD,MAGK;UACHG,UAAU,CAACH,IAAI,GAAG,mBAAR,CAAV;QACD;;QAEDY,OAAO,CAACC,GAAR,CAAYN,GAAZ;QACAK,OAAO,CAACC,GAAR,CAAYJ,GAAZ;MAED;IACF;EACF,CAtBD;;EAyBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAK,SAAS,EAAC,qBAAf;MAAA,uBACE;QAAK,GAAG,EAAIhB,IAAZ;QAAkB,EAAE,EAAC;MAArB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAK,SAAS,EAAC,SAAf;MAAA,wBAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QACE,SAAS,EAAC,cADZ;QAEE,WAAW,EAAE,uBAFf;QAGE,KAAK,EAAEO,IAHT;QAIE,QAAQ,EAAKM,CAAD,IAAO;UAACL,OAAO,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAP;QAAwB,CAJ9C;QAKE,SAAS,EAAIV;MALf;QAAA;QAAA;QAAA;MAAA,QANF,eAaE;QAAA,UAAMH;MAAN;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GA3EQH,G;;KAAAA,G;AA6ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}